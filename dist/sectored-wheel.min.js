(()=>{class t extends HTMLElement{shadow=null;onConnect(){}onDisconnect(){}constructor(){super()}emit(t,e){const i=new CustomEvent(t,{detail:{element:this,data:e}}),s=this[`on${t}`];if("function"==typeof s)s.call(this,i);else{const e=this.getAttribute(`on${t}`);e?new Function("e",`var event = e; return ${e}`):this.dispatchEvent(i)}}connectedCallback(){this.shadow=this.attachShadow({mode:"open"}),this.onConnect()}disconnectedCallback(){this.onDisconnect()}}class e extends t{#t;onConnect(){super.onConnect();const t=document.createElement("template");t.innerHTML="<style>\n            :host {\n                display: flex;\n                flex-direction: row;\n                justify-content: flex-end;\n                align-items: center;\n                box-sizing: border-box;\n                position: absolute;\n                color: #000;\n                left: 50%;\n                font-weight: bold;\n                font-family: sans-serif;\n                text-transform: uppercase;\n                transform-origin: 0 50%;\n                z-index: 1;\n                width: var(--sector-width);\n                height: var(--sector-height);\n                padding-right: calc(var(--sector-width) * 0.15);\n                font-size: min(calc(var(--sector-height) * 0.2), calc(var(--sector-width) / 8));\n            }\n        </style><slot></slot>",this.shadow.appendChild(t.content),this.#t=this.shadow.querySelector(":host > slot")}static get observedAttributes(){return["clipping"]}attributeChangedCallback(t,e,i){this.hasAttribute("clipping")?this.style.clipPath="polygon(0 50%, 100% 0, 100% 100%)":this.style.clipPath="none"}}window.customElements.get("sectored-wheel-item")||(window.SectorElement=e,window.customElements.define("sectored-wheel-item",e));class i extends t{MIN_SIZE="100px";PI2=2*Math.PI;#e;#i;#s;#n;#o=0;#r=!0;#h=[];#a=(t,e)=>{let i;return()=>{clearTimeout(i),i=setTimeout(t,e)}};#l=(t="0")=>{const e=parseFloat(t);return t.indexOf("deg")>0?e*Math.PI/180:t.indexOf("grad")>0?e/400*this.PI2:t.indexOf("turn")>0?e*this.PI2:e};#c=()=>{const t=getComputedStyle(this.#i).transform.replace(/[^\d\.\-e,]+/g,"").split(",");return Math.atan2(t[1],t[0])};#d=(t,e,i)=>{const s=Math.max(t,0),n=Math.max(Math.min(e,this.#h.length-1),0),o=this.PI2/this.#h.length;return"cw"===this.#m?this.PI2*i+o*(s<n?this.#h.length-(n-s):s-n):-1*(this.PI2*i+o*(s<n?n-s:this.#h.length-(s-n)))};#g=(t,e,i)=>{const s=Math.max(Math.min(e,this.#h.length-1),0),n=this.PI2/this.#h.length;let o;return"cw"===this.#m?(o=this.PI2-Math.abs(t),this.PI2*i+o+(this.#h.length-s)*n+Math.abs(t)):(o=Math.abs(t)-this.PI2,o-s*n-Math.abs(t)-this.PI2*i)};#u=()=>{this.#h.forEach((t=>t.classList.remove("selected","preselected")))};rotate=(t,e,i,s)=>{if(this.#h.length){if(this.#u(),s&&(this.#o=0),this.inSpinning){const t=this.#c();this.#i.style.animation="",this.#i.style.transform=`rotate(${t}rad)`,this.#o=this.#g(t,e,this.rotationAcceleration)}else this.#o+=this.#d(s?0:t,e,this.rotationAcceleration);requestAnimationFrame((()=>{requestAnimationFrame((()=>{this.#i.style.transitionDuration=i?"0s":this.rotationTime,this.#i.style.transitionTimingFunction="cubic-bezier(0.25, 1, 0.5, 1)",this.#i.style.transform=`rotate(${this.#o+this.#l(this.azimuth)}rad)`}))}))}};spin=()=>{if(this.inSpinning)return;this.#u();const t=this.#c();this.#i.style.transitionDuration="0s",this.#i.style.transform="none",this.#i.style.transitionTimingFunction="linear",this.#i.style.setProperty("--spin-angle",`${t}rad`),this.#i.style.animation=`calc(${this.rotationTime} / ${this.rotationAcceleration} * 0.1) linear infinite ${"acw"===this.#m?"reverse":""} spin`};realign=this.#a((t=>{t||(this.#h=this.querySelectorAll("sectored-wheel-item"));const e=this.PI2/this.#h.length;if(this.#s){const t=this.#s.clientWidth,i=this.#s.clientHeight,s=t/2,n=i/2,o=-e/2,r=Math.max(t,i)/2;this.#s.width=t,this.#s.height=i;for(let t=0;t<this.#h.length;t++)this.#n.beginPath(),this.#n.moveTo(s,n),this.#n.arc(s,n,r-this.padding-(this.stroke?this.stroke/2:0),o+e*t,o+e*(t+1)),this.#n.lineTo(s,n),this.#n.fillStyle=this.#h[t].getAttribute("color")||this.#p[t%this.#p.length],this.#n.fill(),this.stroke&&(this.#n.lineWidth=this.stroke,this.#n.strokeStyle=this.strokeColor,this.#n.stroke())}this.#h[this.index]||(this.index=-1,this.#u()),!t&&this.#i&&(this.#i.style.setProperty("--count",this.#h.length),this.#i.style.setProperty("--sector-height",`calc(${Math.PI} * ${this.size} / ${this.#h.length})`),this.#i.style.setProperty("--sector-width",`calc(${this.size} / 2)`),this.#i.style.setProperty("--sector-angle",`${e}rad`),this.#h.forEach(((t,i)=>{t.style.transform=`rotate(${e*i}rad)`})),this.rotate(this.index,this.index,!0,!0)),this.#r&&(this.#h.forEach((t=>t.classList.remove("preselected"))),this.#h[this.index]?.classList.add("preselected"),this.#r=!1,this.style.opacity=1)}),100);setIndexAsync=async t=>{this.spin();try{this.index=await t()}catch(t){this.index=-1,console?.error(t)}};static get observedAttributes(){return["index","size","colors","stroke","strokeColor","stroke-color","padding","azimuth","direction","rotationAcceleration","rotation-acceleration","rotationTime","rotation-time"]}attributeChangedCallback(t,e,i){"index"!==t&&e===i||(this[t.replace(/-+[a-z]/g,(t=>t[t.length-1].toUpperCase()))]=i)}#w=-1;set index(t){if(t>=-1){const e=Math.max(parseInt(t||0,10),-1);this.rotate(this.#w,e),this.#w=e}}get index(){return this.#w}#x=this.MIN_SIZE;set size(t){this.#x=t||this.MIN_SIZE,this.style.width=this.#x,this.style.height=this.#x,this.realign()}get size(){return this.#x}#p=[];set colors(t){Array.isArray(t)?this.#p=t:this.#p=String(t).split(/\s*[;|]+\s*/).filter(Boolean),this.realign(!0)}get colors(){return this.#p}#y=0;set stroke(t){this.#y=Math.max(parseInt(t||0,10),0),this.realign(!0)}get stroke(){return this.#y}#f="transparent";set strokeColor(t){this.#f=t||"transparent",this.realign(!0)}get strokeColor(){return this.#f}#v=0;set padding(t){this.#v=Math.max(parseInt(t||0,10),0),this.realign(!0)}get padding(){return this.#v}#b;set azimuth(t){this.#b=t}get azimuth(){return this.#b}#m="acw";set direction(t){this.#m=["acw","cw"].includes(t)?t:"acw"}get direction(){return this.#m}#I=1;set rotationAcceleration(t){this.#I=Math.max(parseInt(t||1,10),1)}get rotationAcceleration(){return this.#I}#k="5s";set rotationTime(t){this.#k=t||"5s"}get rotationTime(){return this.#k}get inRotation(){return!!parseFloat(this.#i.style.transitionDuration)}get inSpinning(){return!!this.#i.style.animation}onConnect(){super.onConnect();const t=document.createElement("template");t.innerHTML=`<style>\n            @keyframes spin {\n                from {\n                    transform: rotate(var(--spin-angle));\n                }\n                to {\n                    transform: rotate(calc(var(--spin-angle) + 360deg));\n                }\n            }\n            :host {\n                position: relative;\n                display: inline-flex;\n                justify-content: center;\n                align-items: center;\n                flex-grow: 0;\n                flex-shrink: 0;\n                user-select: none;\n                min-width: ${this.MIN_SIZE};\n                min-height: ${this.MIN_SIZE};\n                border-radius: 50%;\n                opacity: 0;\n                transition: opacity 0.3s linear;\n                will-change: opacity;\n            }\n            :host > div {\n                position: relative;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                width: 100%;\n                aspect-ratio: 1/1;\n                border-radius: 50%;\n                overflow: hidden;\n                transition: transform;\n                will-change: transform;\n            }\n            :host > div > canvas {\n                width: 100%;\n                aspect-ratio: 1/1;\n            }\n        </style><div><canvas></canvas><slot></slot></div>`,this.shadow.appendChild(t.content),this.#i=this.shadow.querySelector(":host > div"),this.#s=this.#i.querySelector("canvas"),this.#n=this.#s.getContext("2d"),this.#e=new MutationObserver((()=>this.realign())),this.#e.observe(this,{childList:!0}),this.#i.addEventListener("transitionend",(()=>{this.#i.style.transitionDuration="0s",this.inSpinning||this.#r||this.inSpinning||(this.emit("change",this.index),this.#h[this.index]?.classList.add("selected"))})),this.realign()}onDisconnect(){this.#e.disconnect(),super.onDisconnect()}}window.customElements.get("sectored-wheel")||(window.SectoredWheelElement=i,window.customElements.define("sectored-wheel",i))})();